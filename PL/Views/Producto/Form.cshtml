@model ML.Producto
@{
    ViewData["Title"] = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <div class="contreiner">
        <div class="row">
            <div class="col-ml-12">
                <h3>@ViewBag.Titulo</h3>
                <h3>Ingresa los datos</h3>
                <hr />

            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
               <div class="row">

                

                    <div class="form-group" style="display: none;">
                        @Html.LabelFor(model => model.IdProducto, new { @class = "control-label col-md-2 hidden" })
                        <div class="col-md-3">
                            @Html.TextBoxFor(model => model.IdProducto, new { @class = "form-control hidden" })
                            @Html.ValidationMessageFor(model => model.IdProducto)
                        </div>
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Nombre)
                        <div class="input-group mb-3">
                            <span class="input-group-text"><i class="bi bi-file-person-fill" style="color: midnightblue"></i></span>
                            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre", @placeholder="Reloj", autocomplete = "off" })
                            @Html.ValidationMessageFor(model => model.Nombre, null, new { @class = "text-danger"})
                        </div>
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.PrecioUnitario)
                        <div class="input-group mb-3">
                            <span class="input-group-text"><i class="bi bi-file-person-fill" style="color: midnightblue"></i></span>
                            @Html.TextBoxFor(model => model.PrecioUnitario, new { @class = "form-control", @id = "txtPrecioUnitario", @placeholder="500.00", autocomplete = "off" })
                            @Html.ValidationMessageFor(model => model.PrecioUnitario, null, new { @class = "text-danger"})
                        </div>
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Stock)
                        <div class="input-group mb-3">
                            <span class="input-group-text"><i class="bi bi-file-person-fill" style="color: midnightblue"></i></span>
                            @Html.TextBoxFor(model => model.Stock, new { @class = "form-control", @id = "txtStock", @placeholder="7", autocomplete = "off" })
                            @Html.ValidationMessageFor(model => model.Stock, null, new { @class = "text-danger"})
                        </div>
                    </div>

                   
                   
                </div>
                   
                <div class="row">
                    

                    <div class="col-md-3">
                        @Html.Label("Proveedor")
                     <div class="input-group mb-3">
                        <span class="input-group-text" id="basic-addon1"><i class="bi bi-journal-text" style="color: midnightblue"></i></span>
                        @Html.DropDownListFor(model => model.Proveedor.IdProveedor, new SelectList(Model.Proveedor.Proveedores, "IdProveedor", "Nombre"), "Selecciona un pais", new { @class = "form-control", @id = "ddlProveedor" })
                        @Html.ValidationMessageFor(model => model.Proveedor.IdProveedor)
                     </div>
                    </div>

                     <div class="col-md-3">
                        @Html.Label("Area")
                     <div class="input-group mb-3">
                        <span class="input-group-text" id="basic-addon1"><i class="bi bi-journal-text" style="color: midnightblue"></i></span>
                        @Html.DropDownListFor(model => model.Departamento.Area.IdArea, new SelectList(Model.Departamento.Area.Areas, "IdArea", "Nombre"), "Selecciona un pais", new { @class = "form-control", @id = "ddlArea" })
                        @Html.ValidationMessageFor(model => model.Departamento.Area.IdArea)
                     </div>
                    </div>

                    

                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Departamento.Departamentos)
                        <div class="input-group mb-3">
                            <span class="input-group-text" id="basic-addon1"><i class="bi bi-journal-text" style="color: midnightblue"></i></span>
                                @if (Model.Departamento.Departamentos == null)
                                {
                                    @Html.DropDownListFor(model => model.Departamento.IdDepartamento, new SelectList(string.Empty, "Value", "Text"), "Selecciona una opción", new { @class = "form-control", @id = "ddlDepartamento" })
                                    @Html.ValidationMessageFor(model => model.Departamento.IdDepartamento)
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.Departamento.IdDepartamento, new SelectList(Model.Departamento.Departamentos, "IdDepartamento", "Nombre"), "Selecciona una opción", new { @class = "form-control", @id = "ddlDepartamento" })
                                    @Html.ValidationMessageFor(model => model.Departamento.IdDepartamento)
                                }
                        </div>
                    </div>  

                 
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Descripcion)
                        <div class="input-group mb-3">
                            <span class="input-group-text"><i class="bi bi-file-person-fill" style="color: midnightblue"></i></span>
                            @Html.TextBoxFor(model => model.Descripcion, new { @class = "form-control", @id = "txtDescripcion", @placeholder="Bolsa color negro", autocomplete = "off" })
                            @Html.ValidationMessageFor(model => model.Descripcion, null, new { @class = "text-danger"})
                        </div>
                    </div>

                     
                </div>

                     <div class="col-md-3">
                          @Html.LabelFor(model=> model.Imagen)
                           <div class="input-group mb-3">
                                <span class="input-group-text" id="basic-addon1"><i class="bi bi-card-image"></i></span>
                                <input id="IFImagen" type='file' class="form-control" name="IFImagen" onchange="validateFile(this), readURL(this);  " />
                           </div>
                           @if (Model.Imagen !=null)
                        {
                            <img id="Img" src="data:image/*;base64,@Model.Imagen"style="width:250px ; height:250px" />
                        }
                            else
                        {
                             <img id="Img" src="~/Imagenes/UsuarioPorDefecto.jpg" style="width:250px ; height:250px" />
                        }
                    </div>

                    @Html.HiddenFor(model => model.Imagen)

                    <div>
                        @Html.ActionLink("", "Form","Producto")
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="@ViewBag.Accion" class="btn btn-success" />
                        </div>
                    </div>

                
            }
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">
            @Html.ActionLink("Regresar", "GetAll", "Producto", htmlAttributes: new { @class = "btn btn-danger" })
        </div>

    </div>
</div>





@section Scripts
{
    <script src="~/lib/jquery/dist/jquery.js"></script>

    <script type="text/javascript">
    
     $(document).ready(function () {
                $("#ddlArea").change(function () {
                    $("#ddlDepartamento").empty();
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("DepartamentoGetByIdArea")',
                        dataType: 'json',
                        data: { IdArea: $("#ddlArea").val() },
                        success: function (departamento) {
                            $("#ddlDepartamento").append('<option value="0">'+ 'Seleccione una opción' + '</option>');
                            $.each(departamento, function (i, departamento) {
                                $("#ddlDepartamento").append('<option value="'
                                                           + departamento.idDepartamento + '">'
                                                           + departamento.nombre + '</option>');
                            });
                        },
                        error: function (ex) {
                            alert('Failed.' + ex);
                        }
                    });
                });
            });
 


 
      function validateFile()
      {
                    var allowedExtension = ['jpeg', 'jpg','png'];
                    var fileExtension = document.getElementById('IFImagen').value.split('.').pop().toLowerCase();
                    var isValidFile = false;
                        for(var index in allowedExtension) {
                            if(fileExtension === allowedExtension[index]) {
                                isValidFile = true;
                                break;
                            }
                        }
                        if(!isValidFile) {
                            alert('Las extensiones permitidas son : *.' + allowedExtension.join(', *.'));
                            document.getElementById('IFImagen').value = ""
                        }
                        return isValidFile;
                }
                function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#Img')
                          .attr('src', e.target.result);
                    };
                    reader.readAsDataURL(input.files[0]);
                }
      }
</script>
}
